{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/code/alexek1987/todo-app-react/src/Todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Input, InputLabel, Modal, Button, List, ListItem, ListItemText } from '@material-ui/core';\nimport './Todo.css';\nimport db from \"./firebase\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles'; // import useQuote from \"./useQuote\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Todo(props) {\n  const [quote, setQuote] = useState({});\n  useEffect(() => {\n    const fetchQuote = async () => await fetch(`https://type.fit/api/quotes`).then(result => result.json()).then(data => {\n      const randomQuote = Math.floor(Math.random() * data.length);\n      console.log(data[randomQuote].text);\n      setQuote(data[randomQuote]);\n    });\n\n    fetchQuote();\n  }, []);\n  const customStyle = useStyles();\n  const [open, setOpen] = useState(false);\n  const [input, setInput] = useState();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const updateTodo = () => {\n    db.collection('todos').doc(props.todo.id).set({\n      todo: input\n    }, {\n      merge: true\n    });\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: e => setOpen(false),\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: customStyle.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, \"Update TODO\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, \" \", props.todo.todo), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"update__todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Update...\",\n    value: input,\n    onChange: event => setInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, \"Confirm\")))), /*#__PURE__*/React.createElement(List, {\n    className: \"todo__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: props.todo.todo,\n    secondary: quote.text + '- ' + quote.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: e => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, \"Update Todo\"), /*#__PURE__*/React.createElement(DeleteIcon, {\n    onClick: event => db.collection('todos').doc(props.todo.id).delete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  })));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/alexander/code/alexek1987/todo-app-react/src/Todo.js"],"names":["React","useState","useEffect","Input","InputLabel","Modal","Button","List","ListItem","ListItemText","db","DeleteIcon","makeStyles","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","quote","setQuote","fetchQuote","fetch","then","result","json","data","randomQuote","Math","floor","random","length","console","log","text","customStyle","open","setOpen","input","setInput","handleOpen","updateTodo","collection","doc","todo","id","set","merge","e","event","target","value","author","delete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Input, InputLabel, Modal ,Button, List, ListItem, ListItemText } from '@material-ui/core';\nimport './Todo.css';\nimport db from \"./firebase\"\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n// import useQuote from \"./useQuote\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\n\nfunction Todo(props) {\n\n  const [quote, setQuote] = useState({});\n\n  useEffect(() => {\n    const fetchQuote = async () =>\n    await fetch(\n      `https://type.fit/api/quotes`\n      )\n    .then((result) => result.json())\n    .then((data) => {\n      const randomQuote = Math.floor(Math.random() * data.length)\n    console.log(data[randomQuote].text);\n  setQuote(data[randomQuote]);\n\n});\nfetchQuote();\n\n}, []);\n\n\nconst customStyle = useStyles();\nconst [open, setOpen] = useState(false);\nconst [input, setInput] = useState();\n\nconst handleOpen = () => {\n  setOpen(true);\n};\n\nconst updateTodo = () => {\n  db.collection('todos')\n  .doc(props.todo.id)\n  .set({\n    todo: input\n  }, { merge: true });\n  setOpen(false);\n}\n\n\nreturn (\n  <>\n\n  <Modal\n  open={open} onClose={e => setOpen(false)} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n  <div className={customStyle.paper}>\n  <h4>Update TODO</h4>\n  <p> {props.todo.todo}</p>\n  <div className=\"update__todo\">\n  <form>\n  <Input\n  placeholder=\"Update...\"\n  value={input}\n  onChange={event => setInput(event.target.value)}\n  />\n  </form>\n  <Button\n  variant=\"contained\"\n  color=\"secondary\"\n  onClick={updateTodo}>Confirm\n  </Button>\n  </div>\n  </div>\n  </Modal>\n\n  <List className=\"todo__list\">\n  <ListItem>\n  <ListItemText primary={props.todo.todo} secondary={quote.text + '- ' + quote.author}/>\n  </ListItem>\n  <Button\n  variant=\"contained\"\n  color=\"primary\"\n  onClick={e => setOpen(true)}\n  >\n  Update Todo\n  </Button>\n  <DeleteIcon\n  onClick={event =>\n    db.collection('todos')\n    .doc(props.todo.id)\n    .delete()}\n    />\n    </List>\n    </>\n    )\n  }\n\n  export default Todo;\n\n"]},"metadata":{},"sourceType":"module"}