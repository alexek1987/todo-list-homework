{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/code/alexek1987/todo-app-react/src/Todo.js\";\nimport React, { useState } from 'react';\nimport { FormControl, Input, InputLabel, Modal, Button, List, ListItem, ListItemText } from '@material-ui/core';\nimport './Todo.css';\nimport db from \"./firebase\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useQuote from \"./useQuote\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Todo(props) {\n  const customStyle = useStyles();\n  const [open, setOpen] = useState(false);\n  const [input, setInput] = useState();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const updateTodo = () => {\n    db.collection('todos').doc(props.todo.id).set({\n      todo: input\n    }, {\n      merge: true\n    });\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: e => setOpen(false),\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: customStyle.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Update TODO\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \" \", props.todo.todo), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"update__todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Update...\",\n    value: input,\n    onChange: event => setInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Confirm\")))), /*#__PURE__*/React.createElement(List, {\n    className: \"todo__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: props.todo.todo,\n    secondary: quote.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: e => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Update Todo\"), /*#__PURE__*/React.createElement(DeleteIcon, {\n    onClick: event => db.collection('todos').doc(props.todo.id).delete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/alexander/code/alexek1987/todo-app-react/src/Todo.js"],"names":["React","useState","FormControl","Input","InputLabel","Modal","Button","List","ListItem","ListItemText","db","DeleteIcon","makeStyles","useQuote","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","customStyle","open","setOpen","input","setInput","handleOpen","updateTodo","collection","doc","todo","id","set","merge","e","event","target","value","quote","text","delete"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FormControl, Input, InputLabel, Modal ,Button, List, ListItem, ListItemText } from '@material-ui/core';\nimport './Todo.css';\nimport db from \"./firebase\"\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useQuote from \"./useQuote\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction Todo(props) {\n\n  const customStyle = useStyles();\n  const [open, setOpen] = useState(false);\n  const [input, setInput] = useState();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const updateTodo = () => {\n    db.collection('todos')\n    .doc(props.todo.id)\n    .set({\n      todo: input\n    }, { merge: true });\n    setOpen(false);\n  }\n\n\n  return (\n    <>\n\n    <Modal\n      open={open} onClose={e => setOpen(false)} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n      <div className={customStyle.paper}>\n        <h4>Update TODO</h4>\n        <p> {props.todo.todo}</p>\n        <div className=\"update__todo\">\n          <form>\n            <Input\n              placeholder=\"Update...\"\n              value={input}\n              onChange={event => setInput(event.target.value)}\n            />\n          </form>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={updateTodo}>Confirm\n          </Button>\n        </div>\n      </div>\n    </Modal>\n\n    <List className=\"todo__list\">\n      <ListItem>\n        <ListItemText primary={props.todo.todo} secondary={quote.text}/>\n      </ListItem>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={e => setOpen(true)}\n        >\n        Update Todo\n      </Button>\n        <DeleteIcon\n          onClick={event =>\n          db.collection('todos')\n          .doc(props.todo.id)\n          .delete()}\n        />\n   </List>\n   </>\n   )\n}\n\nexport default Todo;\n\n"]},"metadata":{},"sourceType":"module"}