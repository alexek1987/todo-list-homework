{"ast":null,"code":"import _slicedToArray from\"/Users/alexander/code/alexek1987/todo-list-homework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Input,Modal,Button,List,ListItem,ListItemText}from'@material-ui/core';import'./Todo.css';import db from\"./firebase\";import DeleteForeverIcon from'@material-ui/icons/DeleteForever';import{makeStyles}from'@material-ui/core/styles';import{useQuote}from\"./useQuote\";var useStyles=makeStyles(function(theme){return{paper:{position:'absolute',width:400,backgroundColor:theme.palette.background.paper,border:'2px solid #000',boxShadow:theme.shadows[5],padding:theme.spacing(2,4,3)}};});function Todo(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setQuote=_useState2[1];var customStyle=useStyles();var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),input=_useState6[0],setInput=_useState6[1];var handleOpen=function handleOpen(){setOpen(true);};var updateTodo=function updateTodo(){db.collection('todos').doc(props.todo.id).set({todo:input},{merge:true});setOpen(false);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{open:open,onClose:function onClose(e){return setOpen(false);},\"aria-labelledby\":\"simple-modal-title\",\"aria-describedby\":\"simple-modal-description\"},/*#__PURE__*/React.createElement(\"div\",{className:customStyle.paper},/*#__PURE__*/React.createElement(\"h4\",null,\"Update TODO\"),/*#__PURE__*/React.createElement(\"p\",null,\" \",props.todo.todo),/*#__PURE__*/React.createElement(\"div\",{className:\"update__todo\"},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(Input,{placeholder:\"Update...\",value:input,onChange:function onChange(event){return setInput(event.target.value);}})),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:updateTodo},\"Confirm\")))),/*#__PURE__*/React.createElement(List,{className:\"todo__list\"},/*#__PURE__*/React.createElement(ListItem,{className:\"todo__li\"},/*#__PURE__*/React.createElement(ListItemText,{primary:props.todo.todo,secondary:quote.text+'- '+quote.author})),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(e){return setOpen(true);}},\"Update Todo\"),/*#__PURE__*/React.createElement(DeleteForeverIcon,{onClick:function onClick(event){return db.collection('todos').doc(props.todo.id).delete();}})));}export default Todo;","map":{"version":3,"sources":["/Users/alexander/code/alexek1987/todo-list-homework/src/Todo.js"],"names":["React","useState","useEffect","Input","Modal","Button","List","ListItem","ListItemText","db","DeleteForeverIcon","makeStyles","useQuote","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","quote","setQuote","customStyle","open","setOpen","input","setInput","handleOpen","updateTodo","collection","doc","todo","id","set","merge","e","event","target","value","text","author","delete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Input, Modal ,Button, List, ListItem, ListItemText } from '@material-ui/core';\nimport './Todo.css';\nimport db from \"./firebase\"\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useQuote } from \"./useQuote\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\n\nfunction Todo(props) {\n\n  const [quote, setQuote] = useState({});\n  const customStyle = useStyles();\n  const [open, setOpen] = useState(false);\n  const [input, setInput] = useState();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const updateTodo = () => {\n    db.collection('todos')\n    .doc(props.todo.id)\n    .set({\n      todo: input\n    }, { merge: true });\n    setOpen(false);\n  }\n\n\n  return (\n    <>\n\n    <Modal\n      open={open} onClose={e => setOpen(false)} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n      <div className={customStyle.paper}>\n        <h4>Update TODO</h4>\n        <p> {props.todo.todo}</p>\n        <div className=\"update__todo\">\n          <form>\n            <Input\n              placeholder=\"Update...\"\n              value={input}\n              onChange={event => setInput(event.target.value)}\n            />\n          </form>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={updateTodo}>Confirm\n          </Button>\n        </div>\n      </div>\n    </Modal>\n\n    <List className=\"todo__list\">\n      <ListItem className=\"todo__li\">\n        <ListItemText\n          primary={props.todo.todo}\n          secondary={quote.text + '- ' + quote.author}/>\n      </ListItem>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={e => setOpen(true)}\n        >\n        Update Todo\n      </Button>\n        <DeleteForeverIcon\n          onClick={event =>\n          db.collection('todos')\n          .doc(props.todo.id)\n          .delete()}\n        />\n   </List>\n   </>\n   )\n}\n\nexport default Todo;\n\n"]},"metadata":{},"sourceType":"module"}